using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Partida
{
    class Program
    {
        static void Main(string[] args)
        {
            GerenciadorPartidas partidas = new GerenciadorPartidas();
            Partida p1 = new Partida(new Time("PSG", 4, "Cavani"),
                new Time("Barcelona", 0, "Messi"), new DateTime(2017,03,01));
            Partida p2 = new Partida(new Time("PSG", 1, "Cavani"),
                new Time("Barcelona", 6, "Messi"), new DateTime(2017, 03, 01));
            Partida p3 = new Partida(new Time("Palmeiras", 2, "Dudu"),
                new Time("Santos", 1, "Ricardo Oliveira"), new DateTime(2017, 03, 02));
            Partida p4 = new Partida(new Time("Palmeiras", 1, "Dudu"),
                new Time("Boloviano", 1, "X"), new DateTime(2017, 03, 03));

            partidas.Adiciona(p1);
            partidas.Adiciona(p2);
            partidas.Adiciona(p3);
            partidas.Adiciona(p4);

            Console.WriteLine("======================");
            Console.WriteLine("Total de Partidas:" + partidas.TotalPartidas());
            Console.WriteLine("Total de Empates:" + partidas.TotalEmpates());
            Console.WriteLine("% Mandante:" + partidas.PercMandante());
            Console.WriteLine("======================\n\n");

            Console.WriteLine(partidas.Listar());

            Console.ReadKey();
        }
    }
    class GerenciadorPartidas
    {
        List<Partida> lista = new List<Partida>();

        public void Adiciona(Partida p)
        {
            lista.Add(p);
        }

        public int TotalEmpates()
        {
            int total = 0;

            foreach (Partida p in lista)
            {
                if (p.VerificaVencedor().ToUpper().Equals("EMPATE"))
                {
                    total++;
                }
            }
            return total;
        }

        public string ListarData(DateTime data)
        {
            string saida = "";

            foreach (Partida p in lista)
            {
                if (p.DataPartida == data)
                    saida += p.Placar() + "\n\n";
            }

            return saida;
        }

        public string Listar()
        {
            string saida = "";

            foreach (Partida p in lista)
            {
                saida += p.Placar() + "\n\n";
            }

            return saida;
        }

        public int TotalPartidas()
        {
            return lista.Count;
        }

        public float PercMandante()
        {
            int totalMand = 0;

            foreach (Partida p in lista)
            {
                if (p.VerificaVencedor().ToUpper().Equals("ANFITRIAO"))
                {
                    totalMand++;
                }
            }

            return ((float)totalMand / TotalPartidas()) * 100;
        }
    }

    class Partida
    {
        public DateTime DataPartida { protected set; get; }
        private Time mandante;
        private Time visitante;

        public Partida(Time visitante, Time mandante, DateTime dataPartida)
        {
            this.visitante = visitante;
            this.mandante = mandante;
            this.DataPartida = dataPartida;
        }

        public string Placar()
        {
            return this.visitante.Nome + " " + this.visitante.Gols + " " + this.visitante.Atacante
                + " x " + this.mandante.Nome + " " + this.mandante.Gols + " " + this.mandante.Atacante;
        }

        public string VerificaVencedor()
        {
            if (this.visitante.Gols > this.mandante.Gols)
                return "Visitante";
            else if (this.mandante.Gols > this.visitante.Gols)
                return "Anfitriao";
            else
                return "Empate";
        }
    }

    class Time
    {
        private string nome;
        private int gols;
        private string atacante;

        public string Nome
        {
            get
            {
                return nome;
            }

            set
            {
                nome = value;
            }
        }

        public int Gols
        {
            get
            {
                return gols;
            }

            set
            {
                gols = value;
            }
        }

        public string Atacante
        {
            get
            {
                return atacante;
            }

            set
            {
                atacante = value;
            }
        }

        public Time(string nome, int gols, string atacante)
        {
            this.Nome = nome;
            this.Gols = gols;
            this.Atacante = atacante;
        }
    }
}

